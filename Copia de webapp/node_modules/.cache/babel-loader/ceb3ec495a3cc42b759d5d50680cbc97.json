{"remainingRequest":"/Users/Oliver.amezquita/Documents/Creditas/webapp/node_modules/babel-loader/lib/index.js!/Users/Oliver.amezquita/Documents/Creditas/webapp/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/Oliver.amezquita/Documents/Creditas/webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Oliver.amezquita/Documents/Creditas/webapp/src/views/Records.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Oliver.amezquita/Documents/Creditas/webapp/src/views/Records.vue","mtime":1635791373682},{"path":"/Users/Oliver.amezquita/Documents/Creditas/webapp/babel.config.js","mtime":1635739581396},{"path":"/Users/Oliver.amezquita/Documents/Creditas/webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Oliver.amezquita/Documents/Creditas/webapp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Oliver.amezquita/Documents/Creditas/webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Oliver.amezquita/Documents/Creditas/webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0ICcuLi9hc3NldHMvc2Nzcy9yZWNvcmRzLnNjc3MnOwppbXBvcnQgJ3Z1ZS1nb29kLXRhYmxlL2Rpc3QvdnVlLWdvb2QtdGFibGUuY3NzJzsKaW1wb3J0IHsgVnVlR29vZFRhYmxlIH0gZnJvbSAndnVlLWdvb2QtdGFibGUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1JlY29yZHMnLAogIGNvbXBvbmVudHM6IHsKICAgIFZ1ZUdvb2RUYWJsZTogVnVlR29vZFRhYmxlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcm93czogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgaXRlbXM6IGZ1bmN0aW9uIGl0ZW1zKCkgewogICAgICB2YXIgY3VycmVudFBhZ2UgPSAnJzsKCiAgICAgIHN3aXRjaCAodGhpcy4kcm91dGUucGFyYW1zLnR5cGUpIHsKICAgICAgICBjYXNlICdjYXInOgogICAgICAgICAgY3VycmVudFBhZ2UgPSAnQXV0b3MnOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgJ2hvdXNlJzoKICAgICAgICAgIGN1cnJlbnRQYWdlID0gJ0Nhc2FzJzsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICdwYXlyb2xsJzoKICAgICAgICAgIGN1cnJlbnRQYWdlID0gJ07Ds21pbmFzJzsKICAgICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICByZXR1cm4gW3sKICAgICAgICB0ZXh0OiAnSW5pY2lvJywKICAgICAgICBocmVmOiAnLycKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdSZWdpc3Ryb3MnLAogICAgICAgIGhyZWY6ICcjJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogY3VycmVudFBhZ2UsCiAgICAgICAgYWN0aXZlOiB0cnVlCiAgICAgIH1dOwogICAgfSwKICAgIGNvbHVtbnM6IGZ1bmN0aW9uIGNvbHVtbnMoKSB7CiAgICAgIHZhciBjdXN0b21Db2x1bW5zID0gW107CgogICAgICBzd2l0Y2ggKHRoaXMuJHJvdXRlLnBhcmFtcy50eXBlKSB7CiAgICAgICAgY2FzZSAnY2FyJzoKICAgICAgICAgIGN1c3RvbUNvbHVtbnMgPSBbewogICAgICAgICAgICBsYWJlbDogJ05vbWJyZScsCiAgICAgICAgICAgIGZpZWxkOiAnbmFtZScKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdUZWzDqWZvbm8nLAogICAgICAgICAgICBmaWVsZDogJ3Bob25lJwogICAgICAgICAgfSwgewogICAgICAgICAgICBsYWJlbDogJ0NvcnJlbyBlbGVjdHLDs25pY28nLAogICAgICAgICAgICBmaWVsZDogJ2VtYWlsJwogICAgICAgICAgfSwgewogICAgICAgICAgICBsYWJlbDogJ1JGQycsCiAgICAgICAgICAgIGZpZWxkOiAncmZjJwogICAgICAgICAgfSwgewogICAgICAgICAgICBsYWJlbDogJ0RvbWljaWxpbycsCiAgICAgICAgICAgIGZpZWxkOiAnYWRkcmVzcycKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdDw7NkaWdvIFBvc3RhbCcsCiAgICAgICAgICAgIGZpZWxkOiAnemlwY29kZScKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdDaXVkYWQnLAogICAgICAgICAgICBmaWVsZDogJ2NpdHknCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGxhYmVsOiAnRXN0YWRvJywKICAgICAgICAgICAgZmllbGQ6ICdzdGF0ZScKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdNb2RlbG8nLAogICAgICAgICAgICBmaWVsZDogJ21vZGVsJwogICAgICAgICAgfSwgewogICAgICAgICAgICBsYWJlbDogJ1ByZWNpbycsCiAgICAgICAgICAgIGZpZWxkOiAncHJpY2UnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGxhYmVsOiAnRXN0YXR1cycsCiAgICAgICAgICAgIGZpZWxkOiB0aGlzLmZpZWxkU3RhdHVzCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGxhYmVsOiAnQ3JlYWRvJywKICAgICAgICAgICAgZmllbGQ6ICdjcmVhdGVkJwogICAgICAgICAgfV07CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAnaG91c2UnOgogICAgICAgICAgY3VzdG9tQ29sdW1ucyA9IFt7CiAgICAgICAgICAgIGxhYmVsOiAnTm9tYnJlJywKICAgICAgICAgICAgZmllbGQ6ICduYW1lJwogICAgICAgICAgfSwgewogICAgICAgICAgICBsYWJlbDogJ1RlbMOpZm9ubycsCiAgICAgICAgICAgIGZpZWxkOiAncGhvbmUnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGxhYmVsOiAnQ29ycmVvIGVsZWN0csOzbmljbycsCiAgICAgICAgICAgIGZpZWxkOiAnZW1haWwnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGxhYmVsOiAnUkZDJywKICAgICAgICAgICAgZmllbGQ6ICdyZmMnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGxhYmVsOiAnRG9taWNpbGlvJywKICAgICAgICAgICAgZmllbGQ6ICdhZGRyZXNzJwogICAgICAgICAgfSwgewogICAgICAgICAgICBsYWJlbDogJ0PDs2RpZ28gUG9zdGFsJywKICAgICAgICAgICAgZmllbGQ6ICd6aXBjb2RlJwogICAgICAgICAgfSwgewogICAgICAgICAgICBsYWJlbDogJ0NpdWRhZCcsCiAgICAgICAgICAgIGZpZWxkOiAnY2l0eScKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdFc3RhZG8nLAogICAgICAgICAgICBmaWVsZDogJ3N0YXRlJwogICAgICAgICAgfSwgewogICAgICAgICAgICBsYWJlbDogJ1ZhbG9yJywKICAgICAgICAgICAgZmllbGQ6ICd2YWx1ZScKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdEb21pY2lsaW8gZW4gZ2FyYW50w61hJywKICAgICAgICAgICAgZmllbGQ6ICd1Z19hZGRyZXNzJwogICAgICAgICAgfSwgewogICAgICAgICAgICBsYWJlbDogJ0MuUC4gZW4gZ2FyYW50w61hJywKICAgICAgICAgICAgZmllbGQ6ICd1Z196aXBjb2RlJwogICAgICAgICAgfSwgewogICAgICAgICAgICBsYWJlbDogJ0NpdWRhZCBlbiBnYXJhbnTDrWEnLAogICAgICAgICAgICBmaWVsZDogJ3VnX2NpdHknCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGxhYmVsOiAnRXN0YWRvIGVuIGdhcmFudMOtYScsCiAgICAgICAgICAgIGZpZWxkOiAndWdfc3RhdGUnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGxhYmVsOiAnRXN0YXR1cycsCiAgICAgICAgICAgIGZpZWxkOiB0aGlzLmZpZWxkU3RhdHVzCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGxhYmVsOiAnQ3JlYWRvJywKICAgICAgICAgICAgZmllbGQ6ICdjcmVhdGVkJwogICAgICAgICAgfV07CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAncGF5cm9sbCc6CiAgICAgICAgICBjdXN0b21Db2x1bW5zID0gW3sKICAgICAgICAgICAgbGFiZWw6ICdOb21icmUnLAogICAgICAgICAgICBmaWVsZDogJ25hbWUnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGxhYmVsOiAnVGVsw6lmb25vJywKICAgICAgICAgICAgZmllbGQ6ICdwaG9uZScKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdDb3JyZW8gZWxlY3Ryw7NuaWNvJywKICAgICAgICAgICAgZmllbGQ6ICdlbWFpbCcKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdSRkMnLAogICAgICAgICAgICBmaWVsZDogJ3JmYycKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdEb21pY2lsaW8nLAogICAgICAgICAgICBmaWVsZDogJ2FkZHJlc3MnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGxhYmVsOiAnQ8OzZGlnbyBQb3N0YWwnLAogICAgICAgICAgICBmaWVsZDogJ3ppcGNvZGUnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGxhYmVsOiAnQ2l1ZGFkJywKICAgICAgICAgICAgZmllbGQ6ICdjaXR5JwogICAgICAgICAgfSwgewogICAgICAgICAgICBsYWJlbDogJ0VzdGFkbycsCiAgICAgICAgICAgIGZpZWxkOiAnc3RhdGUnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGxhYmVsOiAnRW1wcmVzYScsCiAgICAgICAgICAgIGZpZWxkOiAnY29tcGFueScKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdGZWNoYSBkZSBpbmdyZXNvJywKICAgICAgICAgICAgZmllbGQ6ICdkYXRlX2FkbWlzc2lvbicKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdFc3RhdHVzJywKICAgICAgICAgICAgZmllbGQ6IHRoaXMuZmllbGRTdGF0dXMKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbGFiZWw6ICdDcmVhZG8nLAogICAgICAgICAgICBmaWVsZDogJ2NyZWF0ZWQnCiAgICAgICAgICB9XTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICByZXR1cm4gY3VzdG9tQ29sdW1uczsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoRGF0YTogZnVuY3Rpb24gZmV0Y2hEYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgYXhpb3MuZ2V0KCJodHRwOi8vbG9jYWxob3N0L1NpdGVzL3Jlc3QtYXBpLyIuY29uY2F0KHRoaXMuJHJvdXRlLnBhcmFtcy50eXBlKSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5yb3dzID0gcmVzcG9uc2UuZGF0YS5jbGllbnRzOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgX3RoaXMuZXJyb3JlZCA9IHRydWU7CiAgICAgIH0pOwogICAgfSwKICAgIGZpZWxkU3RhdHVzOiBmdW5jdGlvbiBmaWVsZFN0YXR1cyhyb3dPYmopIHsKICAgICAgcmV0dXJuIHJvd09iai5zdGF0dXMgPT09ICcxJyA/ICdSZWNoYXphZGEnIDogJ0FjZXB0YWRhJzsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoRGF0YSgpOwogIH0KfTs="},{"version":3,"sources":["Records.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"records\">\n        <b-breadcrumb :items=\"items\"></b-breadcrumb>\n        <h5 class=\"mt-5\">Registros guardados</h5>\n        <vue-good-table\n            :columns=\"columns\"\n            :rows=\"rows\" />\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport '../assets/scss/records.scss'\nimport 'vue-good-table/dist/vue-good-table.css'\nimport { VueGoodTable } from 'vue-good-table';\n\nexport default {\n  name: 'Records',\n  components: {\n    VueGoodTable,\n  },\n  data() {\n      return {\n        rows: []\n      }\n  },\n  computed: {\n      items() {\n        let currentPage = ''\n        switch(this.$route.params.type) {\n            case 'car':\n                currentPage = 'Autos'\n                break\n            case 'house':\n                currentPage = 'Casas'\n                break\n            case 'payroll':\n                currentPage = 'Nóminas'\n                break\n        }\n        return [\n            {\n            text: 'Inicio',\n            href: '/'\n            },\n            {\n            text: 'Registros',\n            href: '#'\n            },\n            {\n            text: currentPage,\n            active: true\n            }\n        ]\n      },\n      columns() {\n        let customColumns = []\n        switch(this.$route.params.type) {\n            case 'car':\n                customColumns = [\n                    {\n                        label: 'Nombre',\n                        field: 'name',\n                    },\n                    {\n                        label: 'Teléfono',\n                        field: 'phone'\n                    },\n                    {\n                        label: 'Correo electrónico',\n                        field: 'email',\n                    },\n                    {\n                        label: 'RFC',\n                        field: 'rfc'\n                    },\n                    {\n                        label: 'Domicilio',\n                        field: 'address',\n                    },\n                    {\n                        label: 'Código Postal',\n                        field: 'zipcode'\n                    },\n                    {\n                        label: 'Ciudad',\n                        field: 'city',\n                    },\n                    {\n                        label: 'Estado',\n                        field: 'state'\n                    },\n                    {\n                        label: 'Modelo',\n                        field: 'model'\n                    },\n                    {\n                        label: 'Precio',\n                        field: 'price'\n                    },\n                    {\n                        label: 'Estatus',\n                        field: this.fieldStatus,\n                    },\n                    {\n                        label: 'Creado',\n                        field: 'created'\n                    }\n                ]\n                break\n            case 'house':\n                customColumns = [\n                    {\n                        label: 'Nombre',\n                        field: 'name',\n                    },\n                    {\n                        label: 'Teléfono',\n                        field: 'phone'\n                    },\n                    {\n                        label: 'Correo electrónico',\n                        field: 'email',\n                    },\n                    {\n                        label: 'RFC',\n                        field: 'rfc'\n                    },\n                    {\n                        label: 'Domicilio',\n                        field: 'address',\n                    },\n                    {\n                        label: 'Código Postal',\n                        field: 'zipcode'\n                    },\n                    {\n                        label: 'Ciudad',\n                        field: 'city',\n                    },\n                    {\n                        label: 'Estado',\n                        field: 'state'\n                    },\n                    {\n                        label: 'Valor',\n                        field: 'value'\n                    },\n                    {\n                        label: 'Domicilio en garantía',\n                        field: 'ug_address'\n                    },\n                    {\n                        label: 'C.P. en garantía',\n                        field: 'ug_zipcode'\n                    },\n                    {\n                        label: 'Ciudad en garantía',\n                        field: 'ug_city'\n                    },\n                    {\n                        label: 'Estado en garantía',\n                        field: 'ug_state'\n                    },\n                    {\n                        label: 'Estatus',\n                        field: this.fieldStatus,\n                    },\n                    {\n                        label: 'Creado',\n                        field: 'created'\n                    }\n                ]\n                break\n            case 'payroll':\n                customColumns = [\n                    {\n                        label: 'Nombre',\n                        field: 'name',\n                    },\n                    {\n                        label: 'Teléfono',\n                        field: 'phone'\n                    },\n                    {\n                        label: 'Correo electrónico',\n                        field: 'email',\n                    },\n                    {\n                        label: 'RFC',\n                        field: 'rfc'\n                    },\n                    {\n                        label: 'Domicilio',\n                        field: 'address',\n                    },\n                    {\n                        label: 'Código Postal',\n                        field: 'zipcode'\n                    },\n                    {\n                        label: 'Ciudad',\n                        field: 'city',\n                    },\n                    {\n                        label: 'Estado',\n                        field: 'state'\n                    },\n                    {\n                        label: 'Empresa',\n                        field: 'company'\n                    },\n                    {\n                        label: 'Fecha de ingreso',\n                        field: 'date_admission'\n                    },\n                    {\n                        label: 'Estatus',\n                        field: this.fieldStatus,\n                    },\n                    {\n                        label: 'Creado',\n                        field: 'created',\n                    }\n                ]\n                break\n        }\n        return customColumns\n      }\n  },\n  methods: {\n    fetchData() {\n        axios\n            .get(`http://localhost/Sites/rest-api/${this.$route.params.type}`)\n            .then(response => {\n            this.rows = response.data.clients\n            })\n            .catch(error => {\n            console.log(error)\n            this.errored = true\n            })\n    },\n    fieldStatus(rowObj) {\n        return rowObj.status === '1' ? 'Rechazada' : 'Aceptada'\n    }\n  },\n  created() {\n    this.fetchData()\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}